import { SCORING_MATRIX_NAMES, DNA, PROTEIN, MINIMAP_SIZE } from '../constants/constants';


const smallExample = {
    s1: "ATGC",
    s2: "ATTAGGCGAGG",
    s1Type: DNA,
    s2Type: DNA,
    scoringMatrix: SCORING_MATRIX_NAMES.BLOSUM80,
    windowSize: 3,
};

const dummyExample = {
    s1: "ATG",
    s2: "ATG",
    s1Type: DNA,
    s2Type: DNA,
    scoringMatrix: SCORING_MATRIX_NAMES.IDENTITY,
    windowSize: 1,
};
const identityMidExample = {
    s1: "ATGTTAGAGATTCGAGCTTAAATTATTTAGGCGGATAGCATGACTGCAGTCGAT",
    s2: "ATGTTAGAGATTCGAGCTTAAATTATTTAGGCGGATAGCATCCCTGCAGTCGAT",
    scoringMatrix: SCORING_MATRIX_NAMES.IDENTITY,
    windowSize: 1,
};
const identity100Example = {
    s1: "TTGG".repeat(25),
    s2: "TTGG".repeat(25),
    scoringMatrix: SCORING_MATRIX_NAMES.IDENTITY,
    windowSize: 1,
};
const identity200Example = {
    s1: "ATGG".repeat(50),
    s2: "ATGG".repeat(50),
    scoringMatrix: SCORING_MATRIX_NAMES.IDENTITY,
    windowSize: 1,
};
const identity400Example = {
    s1: "ATGG".repeat(100),
    s2: "ATGG".repeat(100),
    scoringMatrix: SCORING_MATRIX_NAMES.IDENTITY,
    windowSize: 1,
};

const exactExample = {
    s1: "A".repeat(400),
    s2: "AA".repeat(200),
    scoringMatrix: SCORING_MATRIX_NAMES.BLOSUM80,
    windowSize: 25,
};

const smallestExample = {
    s1: "APEERLLA",
    s2: "AGGC",
    s1Type: DNA,
    s2Type: DNA,
    scoringMatrix: SCORING_MATRIX_NAMES.BLOSUM80,
    windowSize: 1,
};

// s1: YWHAB from Uniprot, len 246
// s2: YWHAZ Coelacant ortholog
const orthologExample = {
    s1: "MTMDKSELVQKAKLAEQAERYDDMAAAMKAVTEQGHELSNEERNLLSVAYKNVVGARRSSWRVISSIEQKTERNEKKQQMGKEYREKIEAELQDICNDVLELLDKYLIPNATQPESKVFYLKMKGDYFRYLSEVASGDNKQTTVSNSQQAYQEAFEISKKEMQPTHPIRLGLALNFSVFYYEILNSPEKACSLAKTAFDEAIAELDTLNEESYKDSTLIMQLLRDNLTLWTSENQGDEGDAGEGEN",
    s2: "RKPLQTPTPIRRLWTMDTSELVQKAKLAEQAERYDDMAASMKAVTEQGAELSNEERNLLSVAYKNVVGARRSSWRVISSIEQKTEGSEQKQQMAREYREKIEAELRDICNDVLGLLDKYLIANASKAESKVFYLKMKGDYYRYLAEVAAGEDKKSTVDHSQQVYQEAFEISKKEMTSTHPIRLGLALNFSVFYYEILNLPEQACGLAKTAFDDAISELDKLGDESYKDSTLIMQLLRDNLTVST",
    scoringMatrix: SCORING_MATRIX_NAMES.BLOSUM62,
    windowSize: 15,
};

const biggerExample = {
    s1: "MTMDKSELVQKAKLAEQAERYDDMAAAMKAVTEQGHELSNEERNLLSVAYKNVVGARRSSWRVISSIEQKTERNEKKQQMGKEYREKIEAELQDICNDVLELLDKYLIPNATQPESKVFYLKMKGDYFRYLSEVASGDNKQTTVSNSQQAYQEAFEISKKEMQPTHPIRLGLALNFSVFYYEILNSPEKACSLAKTAFDEAIAELDTLNEESYKDSTLIMQLLRDNLTLWTSENQGDEGDAGEGEN".repeat(20),
    s2: "MTMDKSELVQKAKLAEQAERYDDMAAAMKAVTEQGHELSNEERNLLSVAYKNVVGARRSSWRVISSIEQKTERNEKKQQMGKEYREKIEAELQDICNDVLELLDKYLIPNATQPESKVFYLKMKGDYFRYLSEVASGDNKQTTVSNSQQAYQEAFEISKKEMQPTHPIRLGLALNFSVFYYEILNSPEKACSLAKTAFDEAIAELDTLNEESYKDSTLIMQLLRDNLTLWTSENQGDEGDAGEGEN".repeat(20),
    scoringMatrix: SCORING_MATRIX_NAMES.BLOSUM80,
    windowSize: 21,
};

const zoomExample = {
    s1: "MTMDKSELVQKAKLAEQAERYDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMAAAMKAVTEQGHELSNEERNLLSVAYKNVVGARRSSWRVISSIEQKTERNEKKQQMGKEYREKIEAELQDICNDVLELLDKYLIPNATQPESKVFYLKMKGDYFRYLSEVASGDNKQTTVSNSQQAYQEAFEISKKEMQPTHPIRLGLALNFSVFYYEILNSPEKACSLAKTAFDEAIAELDTLNEESYKDSTLIMQLLRDNLTLWTSENQGDEGDAGEGEN",
    s2: "RKPLQTPTPIRRLWTMDTSELVQKAKLAEQAERYDDMAASMKAVTEQGAELSNEERNLLSVAYKNVVGARRSSWRVISSIEQKTEGSEQKQQMAREYREKIEAELRDICNDVLGLLDKYLIANASKAESKVFYLKMKGDYYRYLAEVAAGEDKKSTVDHSQQVYQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAISKKEMTSTHPIRLGLALNFSVFYYEILNLPEQACGLAKTAFDDAISELDKLGDESYKDSTLIMQLLRDNLTVST",
    scoringMatrix: SCORING_MATRIX_NAMES.BLOSUM62,
    windowSize: 11,
};


let defaultState = {
    s1: '',
    s2: '',
    s1Type: PROTEIN,
    s2Type: PROTEIN,
    density: [],
    windowSize: 5,
    scoringMatrix: SCORING_MATRIX_NAMES.IDENTITY,
    i: 0,
    j: 0,
    L: 0,
    greyScale: {
        minBound: 0,
        maxBound: 255,
        initialAlphas: new Uint8ClampedArray([0]),
    },
    canvasSize: ~~ (0.33 * window.innerWidth),
    toast: {open: false, message: ""},
    zoomLevel: 1,  // 1,2,4,8,...
    view: {
        i: 0, j: 0, L: 0,
        x: 0, y: 0, size: 0,
    },
    minimapView: {
        x: 0, y: 0, size: MINIMAP_SIZE,
    },
};
defaultState.L = Math.max(defaultState.s1.length, defaultState.s2.length);
defaultState.view.L = defaultState.L;
defaultState.view.size = defaultState.canvasSize;


Object.assign(defaultState, orthologExample);


export default defaultState;
